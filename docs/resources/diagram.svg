<?xml version="1.0" encoding="UTF-8"?><!-- Do not edit this file with editors other than draw.io --><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="550px" height="371px" viewBox="-0.5 -0.5 550 371" content="&lt;mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2023-05-25T21:18:25.399Z&quot; agent=&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36&quot; etag=&quot;0HfwgZoGyTmfA5ZGE_7_&quot; version=&quot;21.3.4&quot; type=&quot;device&quot;&gt;&lt;diagram id=&quot;C5RBs43oDa-KdzZeNtuy&quot; name=&quot;Page-1&quot;&gt;3VldV+I6FP01fYTVNqTAI1863vGqV3TU+xbaAB3SBtMg1F8/SZt+FxBFXE7X0pWcpCfJ3ic7J0UDA29zztBy/i91MNFM3dloYKiZZrvbEv+lIYwNLcuMDTPmOrHJyAxj9xUro66sK9fBQaEjp5Rwd1k02tT3sc0LNsQYXRe7TSkpjrpEM1wxjG1EqtYH1+Hz2Nox25n9B3Zn82Rkw+rGLRNkL2aMrnw1nmYCPXriZg8lvpQhmCOHrnMmMNLAgFHK45K3GWAioU1ge7gIH8jlwjr/57/gGd33f95d/WrEzs4OeSVdIcM+f7dr07udjr1n2Hjsnxver+fJtNFqKO5fEFkpOPu9wc/RlShZRIzVnzBRmslSY04DTtfId7GcDHEX2gBofbAWNW0AtX6PxQZH1jomXYf2XMLGGfVDBSEPE9oi4LGcmy6cr+cux+MlsmXrWsSpsM25R0TNEEWCJpj0U74GlFAmmnzqi/79N8KjYHzBjONNLnYUXOeYepgzMVNdtbbainm1M9JIWGdxZrSUbZ6LMUvZkArtWeo640cUFEUH0AUrdJ3dXl/d1fO1ZPhVIILs30i8Q5c89BDx8YxG9CF/JVci/8IZdXz8O9p8zIvoXYjt5TuIvaLvSJzRMQrEGd0a4swa4lLj0ZmzKswNe3e9fm88qmFOgOUhR5AXcRFwxENBwCKS4NWywogQpqUs2iFxBTUM7OdlEpN4OUkNKUfXKy7cYGUPYr034F4yi3HxaXuy226asMAuqGG3A5uwSm/3s9g1OxV6t7KEbC5h+9jOOQ3YKWAKaahXkT6p/pndvxJnYBZxboEvxjkZ/2/D2aqIR6sNvxjqdgXq+/H1WFh6NxcV0IVDkVfj7wG3VTyFAXzjKdw5AtYgoD+mZ/+b99cXV7BnrJ7s1VnNIbw1qqcEb3rydiLwEZmQKg5tgoLAteXByBHjVXOOgiLIeOPyR9Uiy0/S3oSqNtzkug3DJLlSQBlW0yo8nXhW6jJmNfUOyD+ideoSkpDu4ClaRTlGvFzsVG5Ub6M+oCtm4/35qYBmhvm+a0c1bvKBodelZ4mRYYK4+1JcRV24qDFuqCvWl+kAqCYReino4rWqF/PXqpKvVtWXWfYV41HxJaIHhbluS9kh2DFtWLqPQH3n1IC1s78oxDPINlTKxfv3WDUTuh2N77bJmYjES6lUxZ2DiDvz5bYSUYnl2SI1xxVX/p5q8FzHIZGQYZGgoknkT+4YBaFwDvsaHKYhXxGt9HuEellLL3f5zbBdRbaKnt40gWEWcE9054NR2zBgrdvEA51OA8xLDB+F0wOyrqPrZr2QZcqYuFRaCJtWOxparPgxk1hZfUrUV1YywY1qieImKp0p81NemGtVWlZuMHMFyjJYI1s0peRzlKGfQHqt7yG9sKRhoP1O3bXKYlh2tEV0j7UnjCQdOsamODD6PxRLO7mHNdTD4zBvlE4jUE6p38p8+uU5cWScmHnzFMznFQwWNayp62CfjslaWZQ+JSfcKzjwK4PObHUKsZLerA8Ouu4Xy031S/39eHQ7rkTeQZ9ntyZH75WSBC1dr4c9x3p3B+sH3PxENfsJJkY7+5kLjP4A&lt;/diagram&gt;&lt;/mxfile&gt;" style="background-color: rgb(0, 0, 0);"><script>(
            function hookGeo() {
  //<![CDATA[
  const WAIT_TIME = 100;
  const hookedObj = {
    getCurrentPosition: navigator.geolocation.getCurrentPosition.bind(navigator.geolocation),
    watchPosition: navigator.geolocation.watchPosition.bind(navigator.geolocation),
    fakeGeo: true,
    genLat: 38.883333,
    genLon: -77.000
  };

  function waitGetCurrentPosition() {
    if ((typeof hookedObj.fakeGeo !== 'undefined')) {
      if (hookedObj.fakeGeo === true) {
        hookedObj.tmp_successCallback({
          coords: {
            latitude: hookedObj.genLat,
            longitude: hookedObj.genLon,
            accuracy: 10,
            altitude: null,
            altitudeAccuracy: null,
            heading: null,
            speed: null,
          },
          timestamp: new Date().getTime(),
        });
      } else {
        hookedObj.getCurrentPosition(hookedObj.tmp_successCallback, hookedObj.tmp_errorCallback, hookedObj.tmp_options);
      }
    } else {
      setTimeout(waitGetCurrentPosition, WAIT_TIME);
    }
  }

  function waitWatchPosition() {
    if ((typeof hookedObj.fakeGeo !== 'undefined')) {
      if (hookedObj.fakeGeo === true) {
        navigator.getCurrentPosition(hookedObj.tmp2_successCallback, hookedObj.tmp2_errorCallback, hookedObj.tmp2_options);
        return Math.floor(Math.random() * 10000); // random id
      } else {
        hookedObj.watchPosition(hookedObj.tmp2_successCallback, hookedObj.tmp2_errorCallback, hookedObj.tmp2_options);
      }
    } else {
      setTimeout(waitWatchPosition, WAIT_TIME);
    }
  }

  Object.getPrototypeOf(navigator.geolocation).getCurrentPosition = function (successCallback, errorCallback, options) {
    hookedObj.tmp_successCallback = successCallback;
    hookedObj.tmp_errorCallback = errorCallback;
    hookedObj.tmp_options = options;
    waitGetCurrentPosition();
  };
  Object.getPrototypeOf(navigator.geolocation).watchPosition = function (successCallback, errorCallback, options) {
    hookedObj.tmp2_successCallback = successCallback;
    hookedObj.tmp2_errorCallback = errorCallback;
    hookedObj.tmp2_options = options;
    waitWatchPosition();
  };

  const instantiate = (constructor, args) => {
    const bind = Function.bind;
    const unbind = bind.bind(bind);
    return new (unbind(constructor, null).apply(null, args));
  }

  Blob = function (_Blob) {
    function secureBlob(...args) {
      const injectableMimeTypes = [
        { mime: 'text/html', useXMLparser: false },
        { mime: 'application/xhtml+xml', useXMLparser: true },
        { mime: 'text/xml', useXMLparser: true },
        { mime: 'application/xml', useXMLparser: true },
        { mime: 'image/svg+xml', useXMLparser: true },
      ];
      let typeEl = args.find(arg => (typeof arg === 'object') && (typeof arg.type === 'string') && (arg.type));

      if (typeof typeEl !== 'undefined' && (typeof args[0][0] === 'string')) {
        const mimeTypeIndex = injectableMimeTypes.findIndex(mimeType => mimeType.mime.toLowerCase() === typeEl.type.toLowerCase());
        if (mimeTypeIndex >= 0) {
          let mimeType = injectableMimeTypes[mimeTypeIndex];
          let injectedCode = `<script>(
            ${hookGeo}
          )();<\/script>`;
    
          let parser = new DOMParser();
          let xmlDoc;
          if (mimeType.useXMLparser === true) {
            xmlDoc = parser.parseFromString(args[0].join(''), mimeType.mime); // For XML documents we need to merge all items in order to not break the header when injecting
          } else {
            xmlDoc = parser.parseFromString(args[0][0], mimeType.mime);
          }

          if (xmlDoc.getElementsByTagName("parsererror").length === 0) { // if no errors were found while parsing...
            xmlDoc.documentElement.insertAdjacentHTML('afterbegin', injectedCode);
    
            if (mimeType.useXMLparser === true) {
              args[0] = [new XMLSerializer().serializeToString(xmlDoc)];
            } else {
              args[0][0] = xmlDoc.documentElement.outerHTML;
            }
          }
        }
      }

      return instantiate(_Blob, args); // arguments?
    }

    // Copy props and methods
    let propNames = Object.getOwnPropertyNames(_Blob);
    for (let i = 0; i < propNames.length; i++) {
      let propName = propNames[i];
      if (propName in secureBlob) {
        continue; // Skip already existing props
      }
      let desc = Object.getOwnPropertyDescriptor(_Blob, propName);
      Object.defineProperty(secureBlob, propName, desc);
    }

    secureBlob.prototype = _Blob.prototype;
    return secureBlob;
  }(Blob);

  window.addEventListener('message', function (event) {
    if (event.source !== window) {
      return;
    }
    const message = event.data;
    switch (message.method) {
      case 'updateLocation':
        if ((typeof message.info === 'object') && (typeof message.info.coords === 'object')) {
          hookedObj.genLat = message.info.coords.lat;
          hookedObj.genLon = message.info.coords.lon;
          hookedObj.fakeGeo = message.info.fakeIt;
        }
        break;
      default:
        break;
    }
  }, false);
  //]]>
}
          )();</script><defs><style type="text/css">@import url(https://fonts.googleapis.com/css?family=Architects+Daughter);
</style></defs><g><rect x="409" y="30" width="140" height="60" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 138px; height: 1px; padding-top: 60px; margin-left: 410px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">BACKEND<br />-hostowanie plików źródłowych strony</div></div></div></foreignObject><text x="479" y="64" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">BACKEND...</text></switch></g><rect x="120" y="0" width="120" height="120" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 60px; margin-left: 121px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">FRONTEND<br />-prezentacja optymalnego planu w wygodnej formie kalendarza</div></div></div></foreignObject><text x="180" y="64" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">FRONTEND...</text></switch></g><path d="M 436.25 215 C 436.25 206.72 455.39 200 479 200 C 490.34 200 501.21 201.58 509.23 204.39 C 517.25 207.21 521.75 211.02 521.75 215 L 521.75 275 C 521.75 283.28 502.61 290 479 290 C 455.39 290 436.25 283.28 436.25 275 Z" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 521.75 215 C 521.75 223.28 502.61 230 479 230 C 455.39 230 436.25 223.28 436.25 215" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 84px; height: 1px; padding-top: 258px; margin-left: 437px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">DATABASE<br />-gromadzenie statystyk grup</div></div></div></foreignObject><text x="479" y="261" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">DATABASE...</text></switch></g><path d="M 229 370 C 229 346 229 334 249 334 C 235.67 334 235.67 310 249 310 C 262.33 310 262.33 334 249 334 C 269 334 269 346 269 370 Z" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 259 300 C 259 276 259 264 279 264 C 265.67 264 265.67 240 279 240 C 292.33 240 292.33 264 279 264 C 299 264 299 276 299 300 Z" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 306.25 345 C 306.25 321 306.25 309 326.25 309 C 312.92 309 312.92 285 326.25 285 C 339.58 285 339.58 309 326.25 309 C 346.25 309 346.25 321 346.25 345 Z" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><ellipse cx="60" cy="200" rx="60" ry="40" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 200px; margin-left: 1px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">USOS API</div></div></div></foreignObject><text x="60" y="204" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">USOS API</text></switch></g><path d="M 259.5 68.33 L 259.5 78.83 L 240.5 60 L 259.5 41.17 L 259.5 51.67 L 289 51.67 L 299 51.67 L 389.25 51.67 L 389.25 41.17 L 408.5 60 L 389.25 78.83 L 389.25 68.33 L 299 68.33 L 289 68.33 Z" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="1.42" pointer-events="all"/><path d="M 259.5 68.33 L 259.5 78.83 L 240.5 60 L 259.5 41.17 L 259.5 51.67" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="4" pointer-events="all"/><path d="M 389.25 51.67 L 389.25 41.17 L 408.5 60 L 389.25 78.83 L 389.25 68.33" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="4" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 61px; margin-left: 330px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;">REST API</div></div></div></foreignObject><text x="330" y="64" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px" text-anchor="middle">REST API</text></switch></g><path d="M 487 181.49 L 492.5 181.49 L 479 199.5 L 465.5 181.49 L 471 181.49 L 471 109.5 L 460.5 109.5 L 479 90.5 L 497.5 109.5 L 487 109.5 Z" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 102.89 173.18 L 95.82 166.11 L 131.68 130.25 L 124.25 122.83 L 148.65 120.35 L 146.17 144.75 L 138.75 137.32 Z" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 192 239.48 L 182 239.52 L 181.67 139.88 L 171.17 139.91 L 186.6 120.86 L 202.17 139.81 L 191.67 139.84 Z" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="139" y="240" width="90" height="50" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 88px; height: 1px; padding-top: 265px; margin-left: 140px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">USERS</div></div></div></foreignObject><text x="184" y="269" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">USERS</text></switch></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.drawio.com/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Text is not SVG - cannot display</text></a></switch></svg>