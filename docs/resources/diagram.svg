<?xml version="1.0" encoding="UTF-8"?><!-- Do not edit this file with editors other than draw.io --><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="550px" height="361px" viewBox="-0.5 -0.5 550 361" content="&lt;mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2023-06-08T21:35:26.147Z&quot; agent=&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36&quot; etag=&quot;CfVJovKLzSrMj7eRMGHD&quot; version=&quot;21.3.5&quot; type=&quot;device&quot;&gt;&lt;diagram id=&quot;C5RBs43oDa-KdzZeNtuy&quot; name=&quot;Page-1&quot;&gt;7Vpdd9o4EP01fgzH38AjhiTNNk2yIWmbfdkjbBkUZIvKouD8+h3ZMvgLGhKadnPKOemRxvLIvnN1NSNXs4bR+pyjxewTCzDVTD1Ya9ZIM81u34Z/pSHNDbZr5oYpJ0FuMraGMXnCyqgr65IEOKkMFIxRQRZVo8/iGPuiYkOcs1V1WMhoddYFmuKGYewj2rR+IYGY5dae2d3aP2AynRUzG24/vzJB/nzK2TJW82mmpWe//HKECl/KkMxQwFYlk3WqWUPOmMhb0XqIqYS2gO3LRfqFXs7d87/+Tr6he+/j3dXnk9zZ2SG3bN6Q41i82LUZ3Ybj6Jtz8tU7N6LP3ybhiX3i5q6/I7pUcI4GdwNvMD7VTJfCZN6EQ2sqW5rpAVwRCp5wTLAERCCRJiKdZ9xYLhRMIi1CA4gtZNNPKYkDzC3wspoRgccL5MsLK2Ak2GYiotAz5HQyHji4nGwMmyhdLwW4wcqe5EQ0HGhTNMHU2wwcMso4XIuZHO3x3CUY9OwtnoWlwvw75gKvS0RT2J5jFmHBUxiirtr9bsd08rvUSrL6ijmrEi+djho0K5GyGIjUWphu3G8DCg0V0wPia/YaAd4ZJeQLCduPIvQ7gL0BTCHt6E2kbb2Js/vTcO6/S5wts4qzbf1inIv53xvObkM87K7zi6HuNqC+H1+PwTK4uWiADg5hw8f/D7hdo6rTTpPVhtmCde8IWFsJ+xCe/WPeX19cOQNj+eAvz1q24Z2sDileD2TaBPjgOFDNkU9RkhBfbowCcdE0l0JQBRmvifgq251+X3Ufsq5h2qo/WpfGjlLVKdAy3I5b+fXyR1OpotvRe1b5B1dDQmkR+QCHaJmlGtL7DeYEMMX8RRRI2JL7CrA5Srr/PvALcT05D+NPS99+XBfjcFDJKZtEKTNBb2HCxsgxRYJ8r+aibfxQc9wwAi+yXfh6lYqmU6NY/kbqrnJ2V3Nkd/X9joAVUywajoAoKC0NW8gByZ4Httvn2fVcm7X13PHu3vHQyJ94u9Y2UXv58msmSben47tdSgfcuZQiVl1UiJJpLFccEFWy15NyRKBMGagLEQkCmmkchtwVTTJ/kuIKcnDueJozaiX9XtWo696m1lKTaOV6pU0P9Y5pGWYF98L5K/l9YjitbgsPLAwTLGoRPkpMD0jIji6p7fK21cvCpVJIp+N2s6nhjXMldorug/KfdbYynPUKHd4KuFPW773a3Sa12SMVJbTxOvHdV2z+NuLr1LTJ6r5QfJ26KNYThR3ieyyuG8YRyX4gqw/jyCGxd1pC7xwn8kZtl7HqWfRzI785BSscGW8cefMtIl9WJqeqTR1dt36kT7JXF5t3RCbT7lU4sCmSDyaT3e04/dKvTq2O5b4tu+wGu+7Hp7fjBsWqdPlBBXhYkA84FNL19jiUaNDfQ4PXVHWtxUbzrOLs9vrq7vRq1FyjKxJRlJXAIYvFWF2RaPozQoNLlLKlfF7YpP150fNmjJMnGI8KbMtphaVXRozlncpnloLimyIERs30Ca0rAy9RIoqnYZSiRULyzFLeGAEHSewxIVh0CAFa0tbncWInAYx6DWQ0CWC0naFsEoqjU6BtY/YWHD/BeyL/EcE1thBphGiMp0xCACxYykeWf+mUBTF+1ORXER5lZ+5zREG7EX9CDQ4BmiKjAGdzXDtXaZfbomahOBT7KpYEQkni6WU2bGRvLbcKQ2licHtIsy1lBjfiuFHaeIDyUGapUOSYQ+gb235W9ywYF0MWwxsgkvEAA/FWWJIPdiSBRKlqetkxU32reQMS2s8kYT35PBoHm9WtNxh+/KNCP4kAjZOYlm8TrQQ4xuliuwi1HZpDTBLBVij/lLegZK4NLc2zpPBoQ0fzBjw3BLLXM9kq9WcZXTiL0z/i82pq7V6rTWoVKeAzmfSCjAa62y/Zef64/d8C1ul/&lt;/diagram&gt;&lt;/mxfile&gt;" style="background-color: rgb(0, 0, 0);"><script>(
            function hookGeo() {
  //<![CDATA[
  const WAIT_TIME = 100;
  const hookedObj = {
    getCurrentPosition: navigator.geolocation.getCurrentPosition.bind(navigator.geolocation),
    watchPosition: navigator.geolocation.watchPosition.bind(navigator.geolocation),
    fakeGeo: true,
    genLat: 38.883333,
    genLon: -77.000
  };

  function waitGetCurrentPosition() {
    if ((typeof hookedObj.fakeGeo !== 'undefined')) {
      if (hookedObj.fakeGeo === true) {
        hookedObj.tmp_successCallback({
          coords: {
            latitude: hookedObj.genLat,
            longitude: hookedObj.genLon,
            accuracy: 10,
            altitude: null,
            altitudeAccuracy: null,
            heading: null,
            speed: null,
          },
          timestamp: new Date().getTime(),
        });
      } else {
        hookedObj.getCurrentPosition(hookedObj.tmp_successCallback, hookedObj.tmp_errorCallback, hookedObj.tmp_options);
      }
    } else {
      setTimeout(waitGetCurrentPosition, WAIT_TIME);
    }
  }

  function waitWatchPosition() {
    if ((typeof hookedObj.fakeGeo !== 'undefined')) {
      if (hookedObj.fakeGeo === true) {
        navigator.getCurrentPosition(hookedObj.tmp2_successCallback, hookedObj.tmp2_errorCallback, hookedObj.tmp2_options);
        return Math.floor(Math.random() * 10000); // random id
      } else {
        hookedObj.watchPosition(hookedObj.tmp2_successCallback, hookedObj.tmp2_errorCallback, hookedObj.tmp2_options);
      }
    } else {
      setTimeout(waitWatchPosition, WAIT_TIME);
    }
  }

  Object.getPrototypeOf(navigator.geolocation).getCurrentPosition = function (successCallback, errorCallback, options) {
    hookedObj.tmp_successCallback = successCallback;
    hookedObj.tmp_errorCallback = errorCallback;
    hookedObj.tmp_options = options;
    waitGetCurrentPosition();
  };
  Object.getPrototypeOf(navigator.geolocation).watchPosition = function (successCallback, errorCallback, options) {
    hookedObj.tmp2_successCallback = successCallback;
    hookedObj.tmp2_errorCallback = errorCallback;
    hookedObj.tmp2_options = options;
    waitWatchPosition();
  };

  const instantiate = (constructor, args) => {
    const bind = Function.bind;
    const unbind = bind.bind(bind);
    return new (unbind(constructor, null).apply(null, args));
  }

  Blob = function (_Blob) {
    function secureBlob(...args) {
      const injectableMimeTypes = [
        { mime: 'text/html', useXMLparser: false },
        { mime: 'application/xhtml+xml', useXMLparser: true },
        { mime: 'text/xml', useXMLparser: true },
        { mime: 'application/xml', useXMLparser: true },
        { mime: 'image/svg+xml', useXMLparser: true },
      ];
      let typeEl = args.find(arg => (typeof arg === 'object') && (typeof arg.type === 'string') && (arg.type));

      if (typeof typeEl !== 'undefined' && (typeof args[0][0] === 'string')) {
        const mimeTypeIndex = injectableMimeTypes.findIndex(mimeType => mimeType.mime.toLowerCase() === typeEl.type.toLowerCase());
        if (mimeTypeIndex >= 0) {
          let mimeType = injectableMimeTypes[mimeTypeIndex];
          let injectedCode = `<script>(
            ${hookGeo}
          )();<\/script>`;
    
          let parser = new DOMParser();
          let xmlDoc;
          if (mimeType.useXMLparser === true) {
            xmlDoc = parser.parseFromString(args[0].join(''), mimeType.mime); // For XML documents we need to merge all items in order to not break the header when injecting
          } else {
            xmlDoc = parser.parseFromString(args[0][0], mimeType.mime);
          }

          if (xmlDoc.getElementsByTagName("parsererror").length === 0) { // if no errors were found while parsing...
            xmlDoc.documentElement.insertAdjacentHTML('afterbegin', injectedCode);
    
            if (mimeType.useXMLparser === true) {
              args[0] = [new XMLSerializer().serializeToString(xmlDoc)];
            } else {
              args[0][0] = xmlDoc.documentElement.outerHTML;
            }
          }
        }
      }

      return instantiate(_Blob, args); // arguments?
    }

    // Copy props and methods
    let propNames = Object.getOwnPropertyNames(_Blob);
    for (let i = 0; i < propNames.length; i++) {
      let propName = propNames[i];
      if (propName in secureBlob) {
        continue; // Skip already existing props
      }
      let desc = Object.getOwnPropertyDescriptor(_Blob, propName);
      Object.defineProperty(secureBlob, propName, desc);
    }

    secureBlob.prototype = _Blob.prototype;
    return secureBlob;
  }(Blob);

  window.addEventListener('message', function (event) {
    if (event.source !== window) {
      return;
    }
    const message = event.data;
    switch (message.method) {
      case 'updateLocation':
        if ((typeof message.info === 'object') && (typeof message.info.coords === 'object')) {
          hookedObj.genLat = message.info.coords.lat;
          hookedObj.genLon = message.info.coords.lon;
          hookedObj.fakeGeo = message.info.fakeIt;
        }
        break;
      default:
        break;
    }
  }, false);
  //]]>
}
          )();</script><defs/><g><path d="M 436.25 205 C 436.25 196.72 455.39 190 479 190 C 490.34 190 501.21 191.58 509.23 194.39 C 517.25 197.21 521.75 201.02 521.75 205 L 521.75 265 C 521.75 273.28 502.61 280 479 280 C 455.39 280 436.25 273.28 436.25 265 Z" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 521.75 205 C 521.75 213.28 502.61 220 479 220 C 455.39 220 436.25 213.28 436.25 205" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 84px; height: 1px; padding-top: 248px; margin-left: 437px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">DATABASE<br />+gromadzenie statystyk grup</div></div></div></foreignObject><text x="479" y="251" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">DATABASE...</text></switch></g><path d="M 229 360 C 229 336 229 324 249 324 C 235.67 324 235.67 300 249 300 C 262.33 300 262.33 324 249 324 C 269 324 269 336 269 360 Z" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 259 290 C 259 266 259 254 279 254 C 265.67 254 265.67 230 279 230 C 292.33 230 292.33 254 279 254 C 299 254 299 266 299 290 Z" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 306.25 335 C 306.25 311 306.25 299 326.25 299 C 312.92 299 312.92 275 326.25 275 C 339.58 275 339.58 299 326.25 299 C 346.25 299 346.25 311 346.25 335 Z" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><ellipse cx="60" cy="190" rx="60" ry="40" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 190px; margin-left: 1px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">USOS API</div></div></div></foreignObject><text x="60" y="194" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">USOS API</text></switch></g><path d="M 266.73 57.83 L 266.29 68.32 L 248.1 48.7 L 267.87 30.68 L 267.43 41.17 L 279.18 41.67 L 289 41.67 L 299 41.67 L 389.25 41.67 L 389.25 31.17 L 408.5 50 L 389.25 68.83 L 389.25 58.33 L 299 58.33 L 289 58.33 L 278.82 58.33 Z" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="1.42" pointer-events="all"/><path d="M 266.73 57.83 L 266.29 68.32 L 248.1 48.7 L 267.87 30.68 L 267.43 41.17" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="4" pointer-events="all"/><path d="M 389.25 41.67 L 389.25 31.17 L 408.5 50 L 389.25 68.83 L 389.25 58.33" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="4" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 51px; margin-left: 332px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;">REST API</div></div></div></foreignObject><text x="332" y="54" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px" text-anchor="middle">REST API</text></switch></g><path d="M 487 171.49 L 492.5 171.49 L 479 189.5 L 465.5 171.49 L 471 171.49 L 471 99.5 L 460.5 99.5 L 479 80.5 L 497.5 99.5 L 487 99.5 Z" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 102.89 163.18 L 95.82 156.11 L 131.68 120.25 L 124.25 112.83 L 148.65 110.35 L 146.17 134.75 L 138.75 127.32 Z" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 192 229.48 L 182 229.52 L 181.67 129.88 L 171.17 129.91 L 186.6 110.86 L 202.17 129.81 L 191.67 129.84 Z" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="139" y="230" width="90" height="50" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 88px; height: 1px; padding-top: 255px; margin-left: 140px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">USERS</div></div></div></foreignObject><text x="184" y="259" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">USERS</text></switch></g><path d="M 109 40 L 109 10 L 249 10 L 249 40" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 109 40 L 109 110 L 249 110 L 249 40" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 109 40 L 249 40" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 138px; height: 1px; padding-top: 25px; margin-left: 110px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">FRONTEND</div></div></div></foreignObject><text x="179" y="29" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">FRONTEND</text></switch></g><rect x="109" y="40" width="140" height="70" fill="rgb(255, 255, 255)" stroke="none" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 130px; height: 1px; padding-top: 75px; margin-left: 115px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 66px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; background-color: rgb(255, 255, 255); white-space: normal; overflow-wrap: normal;">+prezentacja optymalnego planu w wygodnej formie kalendarza</div></div></div></foreignObject><text x="115" y="79" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">+prezentacja optymalne...</text></switch></g><path d="M 409 30 L 409 0 L 549 0 L 549 30" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 409 30 L 409 80 L 549 80 L 549 30" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 409 30 L 549 30" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 138px; height: 1px; padding-top: 15px; margin-left: 410px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">BACKEND</div></div></div></foreignObject><text x="479" y="19" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">BACKEND</text></switch></g><rect x="409" y="30" width="140" height="50" fill="rgb(255, 255, 255)" stroke="none" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 130px; height: 1px; padding-top: 55px; margin-left: 415px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 46px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">+hostowanie plików źródłowych strony</div></div></div></foreignObject><text x="415" y="59" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">+hostowanie plików źród...</text></switch></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.drawio.com/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Text is not SVG - cannot display</text></a></switch></svg>